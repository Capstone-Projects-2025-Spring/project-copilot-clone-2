{
  "name": "copilot-clone",
  "publisher": "capstone",
  "displayName": "copilotClone-extension",
  "description": "",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.96.4"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "keybindings": [
      {
        "command": "copilotClone.acceptInlineSuggestion",
        "key": "tab",
        "when": "inlineSuggestionVisible"
      },
      {
        "command": "copilotClone.rejectInlineSuggestion",
        "key": "ctrl+space",
        "when": "inlineSuggestionVisible"
      },
      {
        "command": "copilotClone.rejectInlineSuggestion",
        "key": "cmd+r",
        "when": "inlineSuggestionVisible"
      }
    ],
    "configuration": [
      {
        "title": "Copilot Clone Settings",
        "properties": {
          "copilot-clone.general.vendor": {
            "type": "string",
            "default": "ollama",
            "enum": [
              "ollama",
              "openai",
              "google"
            ],
            "description": "Choose the vendor providing the model."
          },
          "copilot-clone.general.modelSelection": {
            "type": "string",
            "default": "codellama:7b",
            "enum": [
              "--Ollama--",
              "codellama:7b",
              "codellama:latest",
              "--Openai--",
              "gpt-4o-mini",
              "--Google--",
              "learnlm-1.5-pro-experimental"
            ],
            "description": "Select which LLM is used for suggestions.",
            "group": "general"
          },
          "copilot-clone.model.temperature": {
            "type": "number",
            "default": 0.2,
            "minimum": 0,
            "maximum": 2,
            "description": "Temperature value the model will use.",
            "group": "model"
          },
          "copilot-clone.model.top_k": {
            "type": "number",
            "default": 0,
            "minimum": 0,
            "maximum": 100,
            "description": "Top K value the model will use.",
            "group": "model"
          },
          "copilot-clone.model.top_p": {
            "type": "number",
            "default": 1,
            "minimum": 0,
            "maximum": 1,
            "description": "Top P (Nucleus Sampling) value the model will use.",
            "group": "model"
          },
          "copilot-clone.model.maxTokens": {
            "type": "number",
            "default": 256,
            "minimum": 0,
            "maximum": 1024,
            "description": "Limit the maximum number of tokens allowed for a response.",
            "group": "model"
          }
        }
      }
    ],
    "commands": [
      {
        "command": "copilotClone.testFetch",
        "title": "Debug: Test fetchSuggestions"
      },
      {
        "command": "copilotClone.signIn",
        "title": "Sign In for coPilotClone"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "jest"
  },
  "devDependencies": {
    "@types/jest": "^29.5.14",
    "@types/node": "20.x",
    "@types/vscode": "^1.97.0",
    "@typescript-eslint/eslint-plugin": "^8.22.0",
    "@typescript-eslint/parser": "^8.22.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "eslint": "^9.19.0",
    "jest": "^29.7.0",
    "ts-jest": "^29.2.6",
    "ts-node": "^10.9.2",
    "typedoc": "^0.27.8",
    "typescript": "^5.7.3"
  },
  "dependencies": {
    "@supabase/supabase-js": "^2.49.1",
    "axios": "^1.7.9",
    "dotenv": "^16.4.7",
    "typedoc-theme-hierarchy": "^5.0.4"
  }
}
