"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[7026],{8240:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>d,toc:()=>l});var t=s(74848),i=s(28453);const o={title:"Backend Documentation",sidebar_label:"Backend Documentation"},r="FlaskBackend",d={id:"api-specification/Backend_Documentation",title:"Backend Documentation",description:"Component used to handle code suggestions, user requests and the flow of suggestions.",source:"@site/docs/api-specification/Backend_Documentation.md",sourceDirName:"api-specification",slug:"/api-specification/Backend_Documentation",permalink:"/project-copilot-clone-2/docs/api-specification/Backend_Documentation",draft:!1,unlisted:!1,editUrl:"https://github.com/Capstone-Projects-2025-Spring/project-copilot-clone-2/edit/main/documentation/docs/api-specification/Backend_Documentation.md",tags:[],version:"current",lastUpdatedBy:"Nick Rucinski",frontMatter:{title:"Backend Documentation",sidebar_label:"Backend Documentation"},sidebar:"docsSidebar",previous:{title:"API Spec",permalink:"/project-copilot-clone-2/docs/api-specification/openapi-spec"},next:{title:"Frontend Documentation",permalink:"/project-copilot-clone-2/docs/api-specification/Frontend_Documentation"}},c={},l=[{value:"<strong>Data Fields</strong>",id:"data-fields",level:2},{value:"<strong>Methods</strong>",id:"methods",level:2},{value:"<code>processCodeRequests()</code>",id:"processcoderequests",level:3},{value:"<code>trackUserProgress()</code>",id:"trackuserprogress",level:3},{value:"<code>controlSuggestionFlow()</code>",id:"controlsuggestionflow",level:3},{value:"<strong>Data fields</strong>",id:"data-fields-1",level:2},{value:"<strong>Methods</strong>",id:"methods-1",level:2},{value:"<code>generateContextAwareSuggestions()</code>",id:"generatecontextawaresuggestions",level:3},{value:"<code>introduceMistakes()</code>",id:"introducemistakes",level:3},{value:"<code>adaptToUserProgress()</code>",id:"adapttouserprogress",level:3},{value:"<strong>Data fields</strong>",id:"data-fields-2",level:2},{value:"<strong>Methods</strong>",id:"methods-2",level:2},{value:"<code>authenticateUser()</code>",id:"authenticateuser",level:3},{value:"<code>logUserActivity()</code>",id:"loguseractivity",level:3},{value:"<strong>Data fields</strong>",id:"data-fields-3",level:2},{value:"<strong>Methods</strong>",id:"methods-3",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"flaskbackend",children:(0,t.jsx)(n.strong,{children:"FlaskBackend"})}),"\n",(0,t.jsx)(n.p,{children:"Component used to handle code suggestions, user requests and the flow of suggestions."}),"\n",(0,t.jsx)(n.h2,{id:"data-fields",children:(0,t.jsx)(n.strong,{children:"Data Fields"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"No data fields."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"methods",children:(0,t.jsx)(n.strong,{children:"Methods"})}),"\n",(0,t.jsx)(n.h3,{id:"processcoderequests",children:(0,t.jsx)(n.code,{children:"processCodeRequests()"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Takes incoming user made coding requests generated from the AI tool."}),"\n",(0,t.jsx)(n.li,{children:"Returns a response from the database to the user after handling the request."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"trackuserprogress",children:(0,t.jsx)(n.code,{children:"trackUserProgress()"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Handles the user's suggestion choices."}),"\n",(0,t.jsx)(n.li,{children:"Correct and incorrect modifications and choices are stored and used to track progression or decline while using the copilot tool."}),"\n",(0,t.jsx)(n.li,{children:"Progress data fields are updated with corresponding tracking data."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"controlsuggestionflow",children:(0,t.jsx)(n.code,{children:"controlSuggestionFlow()"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Control the frequency of coding suggestions presented to the user."}),"\n",(0,t.jsx)(n.li,{children:"Control where within the user's code the suggestions will be made."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h1,{id:"ollamaai",children:(0,t.jsx)(n.strong,{children:"OllamaAI"})}),"\n",(0,t.jsx)(n.p,{children:"AI Component that will be used to monitor progress and generate coding suggestions and intentional errors to help the user learn new coding concepts."}),"\n",(0,t.jsx)(n.h2,{id:"data-fields-1",children:(0,t.jsx)(n.strong,{children:"Data fields"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"modelId, integer: Classifies which OllamaAI model is being used."}),"\n",(0,t.jsx)(n.li,{children:"modelName, string: The name of the AI model that is being used."}),"\n",(0,t.jsx)(n.li,{children:"price, float: The price of the AI service.  Monthly or yearly subscription for access to the service and its features."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"methods-1",children:(0,t.jsx)(n.strong,{children:"Methods"})}),"\n",(0,t.jsx)(n.h3,{id:"generatecontextawaresuggestions",children:(0,t.jsx)(n.code,{children:"generateContextAwareSuggestions()"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Creates an AI generated, correct or incorrect coding suggestion to the user."}),"\n",(0,t.jsx)(n.li,{children:"User's action taken on the suggestions is logged."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"introducemistakes",children:(0,t.jsx)(n.code,{children:"introduceMistakes()"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Presents the user intentionally incorrct code."}),"\n",(0,t.jsx)(n.li,{children:"Code is generated with what the user is working on in their codespace, requiring careful analysis to determine that it is an error."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"adapttouserprogress",children:(0,t.jsx)(n.code,{children:"adaptToUserProgress()"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Monitor correct and incorrect suggestion choices and use the AI model to update level and difficulty."}),"\n",(0,t.jsx)(n.li,{children:"Calls the trackUserProgress function."}),"\n",(0,t.jsx)(n.li,{children:"Returns coding suggestions based off of the user's progression."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h1,{id:"supabase",children:(0,t.jsx)(n.strong,{children:"SupaBase"})}),"\n",(0,t.jsx)(n.p,{children:"Component that will provide backend storage and authentification."}),"\n",(0,t.jsx)(n.h2,{id:"data-fields-2",children:(0,t.jsx)(n.strong,{children:"Data fields"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"No data fields"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"methods-2",children:(0,t.jsx)(n.strong,{children:"Methods"})}),"\n",(0,t.jsx)(n.h3,{id:"authenticateuser",children:(0,t.jsx)(n.code,{children:"authenticateUser()"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Calls a person's credential information."}),"\n",(0,t.jsx)(n.li,{children:"Confirms information with that in the database to allow for access to an account."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"loguseractivity",children:(0,t.jsx)(n.code,{children:"logUserActivity()"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Track a user's suggestion choices."}),"\n",(0,t.jsx)(n.li,{children:"Create logs in order to update difficulty of prompts and adapt to progress."}),"\n",(0,t.jsx)(n.li,{children:"Update suggestion settings for different users based off their progress."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h1,{id:"codesuggestion",children:(0,t.jsx)(n.strong,{children:"CodeSuggestion"})}),"\n",(0,t.jsx)(n.p,{children:"Component used to establish the data fields that will be used by the AI model for the education tool."}),"\n",(0,t.jsx)(n.h2,{id:"data-fields-3",children:(0,t.jsx)(n.strong,{children:"Data fields"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"suggestionId, String: Identifier to simplify keeping track of AI generated code suggestions."}),"\n",(0,t.jsx)(n.li,{children:"codeSnippet, String: Holder for the AI suggestion."}),"\n",(0,t.jsx)(n.li,{children:"hasBug, Boolean: Specifies if intentional bugs are present."}),"\n",(0,t.jsx)(n.li,{children:"correction, String: Corrected code suggestion."}),"\n",(0,t.jsx)(n.li,{children:"isAccepted, Boolean: Used to identify user's accept response to code suggestions."}),"\n",(0,t.jsx)(n.li,{children:"isCorrectResponse, Boolean: Used to track if the user's accepted response is correct."}),"\n",(0,t.jsx)(n.li,{children:"timeSpent, Float: The amount of time the user takes when responding to code suggestions."}),"\n",(0,t.jsx)(n.li,{children:"dateCreated: dateTime: The date when suggestion prompts were generated."}),"\n",(0,t.jsx)(n.li,{children:"language, String: Indicates what language the user code is being written in so that the suggestions are generated in the same language."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"methods-3",children:(0,t.jsx)(n.strong,{children:"Methods"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"No methods"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>d});var t=s(96540);const i={},o=t.createContext(i);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);