"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[7837],{85374:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>d});var i=r(74848),s=r(28453);const t={sidebar_position:7},c="Version Control",o={id:"system-architecture/version-control",title:"Version Control",description:"Overview",source:"@site/docs/system-architecture/version-control.md",sourceDirName:"system-architecture",slug:"/system-architecture/version-control",permalink:"/project-copilot-clone-2/docs/system-architecture/version-control",draft:!1,unlisted:!1,editUrl:"https://github.com/Capstone-Projects-2025-Spring/project-copilot-clone-2/edit/main/documentation/docs/system-architecture/version-control.md",tags:[],version:"current",lastUpdatedBy:"HydroLink",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"docsSidebar",previous:{title:"Development Environment",permalink:"/project-copilot-clone-2/docs/system-architecture/development-environment"},next:{title:"API Specification",permalink:"/project-copilot-clone-2/docs/category/api-specification"}},l={},d=[{value:"Overview",id:"overview",level:2},{value:"Branching Strategy",id:"branching-strategy",level:2},{value:"Main Branch (<code>main</code>)",id:"main-branch-main",level:3},{value:"Sprint Branch (<code>GCCB-SP#-main</code>)",id:"sprint-branch-gccb-sp-main",level:3},{value:"Feature Branches (<code>GCCB-[#]-</code>)",id:"feature-branches-gccb--",level:3},{value:"<strong>End of Sprint Merging</strong>",id:"end-of-sprint-merging",level:3},{value:"Branch Protection Rules",id:"branch-protection-rules",level:2},{value:"Pull Request Process",id:"pull-request-process",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"version-control",children:"Version Control"}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(n.p,{children:["The project is managed using ",(0,i.jsx)(n.strong,{children:"Git"})," and ",(0,i.jsx)(n.strong,{children:"GitHub"}),". The Git repository serves as a ",(0,i.jsx)(n.strong,{children:"monorepo"})," that integrates the following key components:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Docusaurus Documentation"})," \ud83d\udcda \u2013 Project documentation"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Extension"})," \ud83d\udee0 \u2013 Frontend & logic handling"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"WebServer"})," \ud83c\udf10 \u2013 Backend operations"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"branching-strategy",children:"Branching Strategy"}),"\n",(0,i.jsxs)(n.h3,{id:"main-branch-main",children:["Main Branch (",(0,i.jsx)(n.code,{children:"main"}),")"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"main"})," branch holds the most ",(0,i.jsx)(n.strong,{children:"stable and up-to-date"})," version of the project."]}),"\n",(0,i.jsxs)(n.li,{children:["No direct commits are allowed\u2014changes are merged via ",(0,i.jsx)(n.strong,{children:"pull requests"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"sprint-branch-gccb-sp-main",children:["Sprint Branch (",(0,i.jsx)(n.code,{children:"GCCB-SP#-main"}),")"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["At the start of each ",(0,i.jsx)(n.strong,{children:"Sprint"}),", a new ",(0,i.jsx)(n.strong,{children:"working branch"})," from ",(0,i.jsx)(n.code,{children:"main"})," is created in the format: ",(0,i.jsx)(n.code,{children:"GCCB-SP#-main"})," (e.g., ",(0,i.jsx)(n.code,{children:"GCCB-SP3-main"})," for Sprint 3)"]}),"\n",(0,i.jsxs)(n.li,{children:["This branch ",(0,i.jsx)(n.strong,{children:"accumulates all changes and features"})," during the sprint."]}),"\n",(0,i.jsxs)(n.li,{children:["It ensures ",(0,i.jsx)(n.code,{children:"main"})," remains clean while providing a dedicated branch for sprint development."]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"feature-branches-gccb--",children:["Feature Branches (",(0,i.jsx)(n.code,{children:"GCCB-[#]-"}),")"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Feature branches are created from the current ",(0,i.jsx)(n.code,{children:"GCCB-SP[#]-main"})," branch through ",(0,i.jsx)(n.strong,{children:"Jira"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Naming convention: ",(0,i.jsx)(n.code,{children:"GCCB-#-"})," where ",(0,i.jsx)(n.code,{children:"#"})," is the Jira issue number."]}),"\n",(0,i.jsx)(n.li,{children:"These branches are task-specific and linked to Jira issues."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"end-of-sprint-merging",children:(0,i.jsx)(n.strong,{children:"End of Sprint Merging"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["At the end of each sprint, the final stage of ",(0,i.jsx)(n.code,{children:"GCCB-SP#-main"})," will be reviewed and merged back into ",(0,i.jsx)(n.code,{children:"main"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Ensures all changes are stable before reaching production."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"branch-protection-rules",children:"Branch Protection Rules"}),"\n",(0,i.jsx)(n.p,{children:"Rules are strictly enforced to maintain code quality and security:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Branch"}),(0,i.jsx)(n.th,{children:"Approval Required"}),(0,i.jsx)(n.th,{children:"Direct Pushes"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"main"})}),(0,i.jsx)(n.td,{children:"2 approvals"}),(0,i.jsx)(n.td,{children:"\u274c Not allowed"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"GCCB-SP#-main"})}),(0,i.jsx)(n.td,{children:"1 approval"}),(0,i.jsx)(n.td,{children:"\u274c Not allowed"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"pull-request-process",children:"Pull Request Process"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Create a Feature Branch"})," (",(0,i.jsx)(n.code,{children:"BP-#"}),") from the sprint branch."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Push changes"})," and open a PR for review."]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Review & Approvals:"})}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Feature branches: ",(0,i.jsx)(n.strong,{children:"1 approval"})," (Sprint Branch)"]}),"\n",(0,i.jsxs)(n.li,{children:["Sprint branches: ",(0,i.jsx)(n.strong,{children:"2 approvals"})," (",(0,i.jsx)(n.code,{children:"main"}),")"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>o});var i=r(96540);const s={},t=i.createContext(s);function c(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);